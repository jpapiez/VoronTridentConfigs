# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design Trident 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

[include mainsail.cfg]               # Mainsail configuration - required!
[include common/*.cfg]               # Load common configs first
[include fans.cfg]                   # for fan definitions
[include variable_setup.cfg]         # Set up global user varaibles
[include macros.cfg]                 # for custom macro definitions
[include bed_mesh.cfg]               # bed mesh definition
[include idle_timeout.cfg]           # idle timeout configuration
[include input_shaper.cfg]           # Input Shaper (ADXL345) definitions
[include test_speed.cfg]             # Speed testing
[include KAMP_Settings.cfg]          # Make sure to include my updated version of the KAMP settings file for my preferences
[include macros_debug.cfg]           # Some debugging data dumps
[include macros_filament.cfg]        # Macros for filament management
[include macros_inputshaper.cfg]     # Macros for input shaper
[include macros_plates.cfg]          # Macros for flex plate management
#[include macros_nozzle_scrub.cfg]    # Nozzle Scrub & Purge Bucket  - rewritten
[include runout.cfg]                 # Filament runout sensor
#[include timelapse.cfg]              # Moonraker timelapse
## Reminder: the following use the KIAUH gcode_shell_command extension. If an update kills it, re-run KIAUH, go to 4/Advanced and 8/Gcode-shell-command to reinstall
[include macros_backup.cfg]          # Macro for Git backup from Klipper interface
#[include macros_webcam.cfg]          # Webcam control

[include macros_belt_tension.cfg]    # Belt tension balance analysis using ADXL
[include test_probe_accuracy.cfg]    # probe accuracy testing from https://github.com/KiloQubit/probe_accuracy
                                     # run ~/plotly-env/bin/python3 ~/probe_accuracy/probe_accuracy.py --klippy-uds ./printer_data/comms/moonraker.sock in SSH session.
                                     # then run TEST_PROBE_ACCURACY in Mainsail/Fluidd. It takes an hour.
                                     # then run ~/plotly-env/bin/python3 ~/probe_accuracy/probe_accuracy.py \
                                     #    --plot-only \
                                     #    --data-file /tmp/probe_accuracy.json \
                                     #    --chart-file /tmp/probe_accuracy.html
[include stealthburner_leds.cfg]     # for SB toolhead LED definitions

# Required for KAMP
[exclude_object]                     # Turn on exclude object functionality

[respond]                            # Allow the console/screen status messages

# Save location for persistent variable storage
[save_variables]
filename: /home/pi/printer_data/config/.variables.stb

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_110045001550535556323420-if00
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
#max_velocity: 300  
max_velocity: 800  

# max_accel: 3000             #Max 4000
max_accel: 7000             # max accel suggested by input shaper  # 7000 = max achievable from Ellis speed_test process  # Max 4000 = suggested max default config file
max_accel_to_decel: 3500    # half of max_accel as suggested by Ellis tuing   # 3500 = half for max achievable
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[mcu rpi]
serial: /tmp/klipper_host_mcu

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400  #set to 200 for 1.8 degree stepper
## endstop_pin: ^PG6
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
##--------------------------------------------------------------------
##  Uncomment for 300mm build
position_endstop: 300
position_max: 300
##--------------------------------------------------------------------
homing_speed: 20   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG6               # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 95            # 255 is most sensitive value, 0 is least sensitive


##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400  #set to 200 for 1.8 degree stepper
## endstop_pin: PG9
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
##--------------------------------------------------------------------
##  Uncomment for 300mm build
position_endstop: 300
position_max: 300
##--------------------------------------------------------------------
homing_speed: 20  #Max 100
homing_retract_dist: 0 #Default: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: PG9                # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 92            # 255 is most sensitive value, 0 is least sensitive

#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
##
## TAP Configuration
## https://github.com/VoronDesign/Voron-Tap/blob/main/config/tap_klipper_instructions.md
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 4    # Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
microsteps: 32
full_steps_per_rotation: 200
## Original endstop_pin
## endstop_pin: PG10
##
## endstop_pin configured for TAP
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
##
## Commented out position_endstop for TAP
## position_endstop: -0.5
position_max: 280 ## For LDO 300^3 kits use 290, for 250^3 kits use 240
position_min: -2.5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Center
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 4  # Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
microsteps: 32
full_steps_per_rotation: 200

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Front Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 4  # Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
microsteps: 32
full_steps_per_rotation: 200

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

#   Connected to MOTOR_6
#   Heater - HE0
#   Thermistor - T0
[extruder]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## The kit ships with ATC Semitec 104NT thermistors, check your thermistor type if you have a hotend with an integrated thermistor
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF4
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE4
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA2
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
## LDO heaters have their sensor type labelled on the heater
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.7
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
## Probe Type: Voron TAP
pin: ^PG15
x_offset: 0
y_offset: 0
speed: 10.0
samples: 2 #3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.01 # huge value for testing 0.01 ; 0.006
samples_tolerance_retries: 3

##
## Added activate_gcode for TAP
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#   LED Control
#####################################################################

[output_pin caselight]
## Chamber Lighting - FAN5
pin: PD15
pwm:true
shutdown_value: 0
value:0.05
cycle_time: 0.01

#####################################################################
# 	Additional Sensors
#####################################################################

[temperature_sensor chamber_temp]
## Chamber Temperature - T1
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF5
min_temp: 0
max_temp: 100
gcode_id: chamber_th

## Temperature of the MCU
[temperature_sensor MCU]
sensor_type: temperature_mcu

## Temperature fo the Raspberry PI
[temperature_sensor RPI]
sensor_type: temperature_host

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[homing_override]
axes: xyz
gcode:
  STATUS_HOMING
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}  
    G90
    G0 X150 Y150 # Added for TAP
    G28 Z
    G1 Z10
  {% endif %}
  STATUS_READY

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead
## Uncomment below for 300mm build
z_positions:
   -50, 18
   150, 348
   350, 18
points:
   30, 5
   150, 245
   270, 5
speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Macros
#####################################################################

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 33.801
#*# pid_ki = 4.333
#*# pid_kd = 65.912
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 45.711
#*# pid_ki = 1.917
#*# pid_kd = 272.554
#*#
#*# [probe]
#*# z_offset = -1.689
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.003125, 0.006875, 0.005000, -0.004375, 0.021875
#*# 	0.034375, 0.033750, 0.016875, -0.001250, 0.025000
#*# 	0.053750, 0.050000, 0.020625, -0.025000, 0.000000
#*# 	0.030000, 0.038125, 0.050000, 0.018125, 0.035000
#*# 	-0.012500, 0.048750, 0.071250, 0.056875, 0.075625
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 290.0
#*# min_y = 20.0
#*# max_y = 290.0
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 84.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 48.8
