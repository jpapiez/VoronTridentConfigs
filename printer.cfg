# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design Trident 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

[include mainsail.cfg]               # Mainsail configuration - required!
#[include fans.cfg]                   # for fan definitions
#[include variable_setup.cfg]         # Set up global user varaibles
#[include bed_mesh.cfg]               # bed mesh definition
#[include idle_timeout.cfg]           # idle timeout configuration
#[include test_speed.cfg]             # Speed testing
#[include macros_debug.cfg]           # Some debugging data dumps
#[include macros_filament.cfg]        # Macros for filament management
#[include macros_inputshaper.cfg]     # Macros for input shaper
#[include macros_plates.cfg]          # Macros for flex plate management
#[include macros_nozzle_scrub.cfg]    # Nozzle Scrub & Purge Bucket  - rewritten
#[include runout.cfg]                 # Filament runout sensor
#[include timelapse.cfg]              # Moonraker timelapse
## Reminder: the following use the KIAUH gcode_shell_command extension. If an update kills it, re-run KIAUH, go to 4/Advanced and 8/Gcode-shell-command to reinstall
[include macros_backup.cfg]          # Macro for Git backup from Klipper interface
#[include macros_webcam.cfg]          # Webcam control

[include KAMP_Settings.cfg]          # Make sure to include my updated version of the KAMP settings file for my preferences

#[include macros_belt_tension.cfg]    # Belt tension balance analysis using ADXL
#[include test_probe_accuracy.cfg]    # probe accuracy testing from https://github.com/KiloQubit/probe_accuracy
                                     # run ~/plotly-env/bin/python3 ~/probe_accuracy/probe_accuracy.py --klippy-uds ./printer_data/comms/moonraker.sock in SSH session.
                                     # then run TEST_PROBE_ACCURACY in Mainsail/Fluidd. It takes an hour.
                                     # then run ~/plotly-env/bin/python3 ~/probe_accuracy/probe_accuracy.py \
                                     #    --plot-only \
                                     #    --data-file /tmp/probe_accuracy.json \
                                     #    --chart-file /tmp/probe_accuracy.html
[include leds_stealthburner.cfg]     # for SB toolhead LED definitions

[include macros.cfg]                 # for custom macro definitions

# Required for KAMP
[exclude_object]                     # Turn on exclude object functionality

# Save location for persistent variable storage
[save_variables]
filename: /home/pi/printer_data/config/.variables.stb

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_110045001550535556323420-if00
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 800           # 300
max_accel: 7000             # max accel suggested by input shaper  # 7000 = max achievable from Ellis speed_test process  # Max 4000 = suggested max default config file
max_accel_to_decel: 3500    # half of max_accel as suggested by Ellis tuing   # 3500 = half for max achievable
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[mcu rpi]
serial: /tmp/klipper_host_mcu

[include hardware_input_shaper.cfg]           # Input Shaper (ADXL345) definitions

[include hardware_stepper_xy.cfg]

[include hardware_stepper_z.cfg]

[include hardware_extruder.cfg]

[include hardware_heaters.cfg]

[include hardware_probe.cfg]

[include hardware_fans.cfg]

[include hardware_caselight.cfg]

[include hardware_temp_sensors.cfg]

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################
[idle_timeout]
timeout: 1800

[homing_override]
axes: xyz
gcode:
  LED_HOMING
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    RESPOND MSG="Homing X Axis"
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    RESPOND MSG="Homing Y Axis"
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}  
    RESPOND MSG="Homing Z Axis"
    G90
    G0 X150 Y150 # Added for TAP
    G28 Z
    G1 Z10
  {% endif %}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
  LED_STANDBY

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead
## Uncomment below for 300mm build
z_positions:
   -50, 18
   150, 348
   350, 18
points:
   30, 5
   150, 245
   270, 5
speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Macros
#####################################################################

[include bed_mesh.cfg]

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 33.801
#*# pid_ki = 4.333
#*# pid_kd = 65.912
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 45.711
#*# pid_ki = 1.917
#*# pid_kd = 272.554
#*#
#*# [probe]
#*# z_offset = -1.689
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.003125, 0.006875, 0.005000, -0.004375, 0.021875
#*# 	0.034375, 0.033750, 0.016875, -0.001250, 0.025000
#*# 	0.053750, 0.050000, 0.020625, -0.025000, 0.000000
#*# 	0.030000, 0.038125, 0.050000, 0.018125, 0.035000
#*# 	-0.012500, 0.048750, 0.071250, 0.056875, 0.075625
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 290.0
#*# min_y = 20.0
#*# max_y = 290.0
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 84.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 48.8
