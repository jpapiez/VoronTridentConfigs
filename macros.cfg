#####################################################################
#   print_start macro
#####################################################################
## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
  {% set user   = printer['gcode_macro _USER_VARIABLE'] %}
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default(0)|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  {% if user.hw.caselight.ena %} _CASELIGHT_ON {% endif %}      # switch on light

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  LED_HOMING                                                    # Sets SB-leds to homing-mode
  G28                                                           # Full home (XYZ)
  G90                                                           # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Heating bed {target_bed}c"            # Displays info
    LED_HEATING                                                 # Sets SB-leds to heating-mode
    M106 S255                                                   # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                              # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                            # Goes to center of the bed
    M190 S{target_bed}                                          # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoaking {target_chamber}c"  # Displays info
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
    TEMPERATURE_WAIT SENSOR="temperature_fan chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"                   # Displays info
    LED_HEATING                                                 # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                            # Goes to center of the bed
    M190 S{target_bed}                                          # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Bed heat for 1min"                    # Displays info
    G4 P60000                                                   # Waits 1 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Heating Hotend: 150c"                   # Displays info
  M109 S150                                                     # Heats the nozzle to 150c

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  SET_DISPLAY_TEXT MSG="Z-tilt adjust"                          # Displays info
  LED_LEVELING                                                  # Sets SB-leds to leveling-mode
  Z_TILT_ADJUST                                                 # Levels the buildplate via z_tilt_adjust
  G28 Z                                                         # Homes Z again after z_tilt_adjust

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"                               # Displays info
  LED_MESHING                                                   # Sets SB-leds to bed mesh-mode
  BED_MESH_CALIBRATE                                            # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  LED_HEATING                                                   # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  LED_PURGE
  VORON_PURGE                                                   # KAMP adaptive purge, used with adaptive bed mesh
  G92 E0                                                        # Reset extruder	
  LED_PRINTING                                                  # Prep done, start print
  RESPOND MSG="Print in progress"
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
  {% set user   = printer['gcode_macro _USER_VARIABLE'] %}
  # safe anti-stringing move coords
  {% set th = printer.toolhead %}
  {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
  {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
  {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
  
  SAVE_GCODE_STATE NAME=STATE_PRINT_END
  
  M400                                                          # wait for buffer to clear
  G92 E0                                                        # zero the extruder
  G1 E-2.0 F3600                                                # retract filament
    
  TURN_OFF_HEATERS
  
  G90                                                           # absolute positioning
  G0 X{x_safe} Y{y_safe} Z{z_safe} F2000                        # move nozzle to remove stringing
  G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600     # park nozzle at rear
  M107                                                          # turn off fan

  {% if user.hw.caselight.ena %} _CASELIGHT_OFF {% endif %}

  BED_MESH_CLEAR
  RESTORE_GCODE_STATE NAME=STATE_PRINT_END
